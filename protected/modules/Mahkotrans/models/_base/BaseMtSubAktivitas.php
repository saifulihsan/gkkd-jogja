<?php

/**
 * This is the model base class for the table "mt_sub_aktivitas".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MtSubAktivitas".
 *
 * Columns in table "mt_sub_aktivitas" available as properties of the model,
 * followed by relations of table "mt_sub_aktivitas" available as properties of the model.
 *
 * @property integer $id
 * @property string $nama
 * @property string $desc
 * @property string $account_code
 * @property integer $inactive
 *
 * @property MtAktivitas[] $pahAktivitases
 * @property MtChartMaster $accountCode
 */
abstract class BaseMtSubAktivitas extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mt_sub_aktivitas';
	}

	public static function representingColumn() {
		return 'nama';
	}

	public function rules() {
		return array(
			array('account_code', 'required'),
			array('inactive', 'numerical', 'integerOnly'=>true),
			array('nama', 'length', 'max'=>50),
			array('account_code', 'length', 'max'=>15),
			array('desc', 'safe'),
			array('nama, desc, inactive', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nama, desc, account_code, inactive', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'pahAktivitases' => array(self::HAS_MANY, 'MtAktivitas', 'mt_sub_aktivitas_id'),
			'accountCode' => array(self::BELONGS_TO, 'MtChartMaster', 'account_code'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nama' => Yii::t('app', 'Nama'),
			'desc' => Yii::t('app', 'Desc'),
			'account_code' => Yii::t('app', 'Account Code'),
			'inactive' => Yii::t('app', 'Inactive'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nama', $this->nama, true);
		$criteria->compare('desc', $this->desc, true);
		$criteria->compare('account_code', $this->account_code);
		$criteria->compare('inactive', $this->inactive);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
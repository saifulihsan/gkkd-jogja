<?php

/**
 * This is the model base class for the table "mt_gl_trans".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MtGlTrans".
 *
 * Columns in table "mt_gl_trans" available as properties of the model,
 * followed by relations of table "mt_gl_trans" available as properties of the model.
 *
 * @property integer $counter
 * @property integer $type
 * @property integer $type_no
 * @property string $tran_date
 * @property string $account
 * @property string $memo_
 * @property double $amount
 * @property integer $users_id
 * @property integer $id_mobil
 *
 * @property MtChartMaster $account0
 * @property MtMobil $idMobil
 */
abstract class BaseMtGlTrans extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mt_gl_trans';
	}

	public static function representingColumn() {
		return 'memo_';
	}

	public function rules() {
		return array(
			array('type_no, memo_, users_id', 'required'),
			array('type, type_no, users_id, id_mobil', 'numerical', 'integerOnly'=>true),
			array('amount', 'numerical'),
			array('account', 'length', 'max'=>15),
			array('tran_date', 'safe'),
			array('type, tran_date, account, amount, id_mobil', 'default', 'setOnEmpty' => true, 'value' => null),
			array('counter, type, type_no, tran_date, account, memo_, amount, users_id, id_mobil', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'account0' => array(self::BELONGS_TO, 'MtChartMaster', 'account'),
			'idMobil' => array(self::BELONGS_TO, 'MtMobil', 'id_mobil'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'counter' => Yii::t('app', 'Counter'),
			'type' => Yii::t('app', 'Type'),
			'type_no' => Yii::t('app', 'Type No'),
			'tran_date' => Yii::t('app', 'Tran Date'),
			'account' => Yii::t('app', 'Account'),
			'memo_' => Yii::t('app', 'Memo'),
			'amount' => Yii::t('app', 'Amount'),
			'users_id' => Yii::t('app', 'Users'),
			'id_mobil' => Yii::t('app', 'Id Mobil'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('counter', $this->counter);
		$criteria->compare('type', $this->type);
		$criteria->compare('type_no', $this->type_no);
		$criteria->compare('tran_date', $this->tran_date, true);
		$criteria->compare('account', $this->account);
		$criteria->compare('memo_', $this->memo_, true);
		$criteria->compare('amount', $this->amount);
		$criteria->compare('users_id', $this->users_id);
		$criteria->compare('id_mobil', $this->id_mobil);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
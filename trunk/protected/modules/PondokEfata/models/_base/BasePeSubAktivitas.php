<?php

/**
 * This is the model base class for the table "pe_sub_aktivitas".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PeSubAktivitas".
 *
 * Columns in table "pe_sub_aktivitas" available as properties of the model,
 * followed by relations of table "pe_sub_aktivitas" available as properties of the model.
 *
 * @property integer $id
 * @property string $nama
 * @property string $desc_
 * @property string $account_code
 * @property integer $inactive
 *
 * @property PeAktivitas[] $peAktivitases
 * @property PeAktivitasGrupTrans[] $peAktivitasGrupTrans
 * @property PeChartMaster $accountCode
 */
abstract class BasePeSubAktivitas extends GxActiveRecord
{
    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'pe_sub_aktivitas';
    }

    public static function representingColumn()
    {
        return 'nama';
    }

    public function rules()
    {
        return array(
            array('inactive', 'numerical', 'integerOnly' => true),
            array('nama', 'length', 'max' => 50),
            array('account_code', 'length', 'max' => 15),
            array('desc_', 'safe'),
            array('nama, desc_, account_code, inactive', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, nama, desc_, account_code, inactive', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'peAktivitases' => array(self::HAS_MANY, 'PeAktivitas', 'pe_sub_aktivitas_id'),
            'peAktivitasGrupTrans' => array(self::HAS_MANY, 'PeAktivitasGrupTrans', 'pe_sub_aktivitas_id'),
            'accountCode' => array(self::BELONGS_TO, 'PeChartMaster', 'account_code'),
        );
    }

    public function pivotModels()
    {
        return array();
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('app', 'ID'),
            'nama' => Yii::t('app', 'Nama'),
            'desc_' => Yii::t('app', 'Desc'),
            'account_code' => Yii::t('app', 'Account Code'),
            'inactive' => Yii::t('app', 'Inactive'),
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;
        $criteria->compare('id', $this->id);
        $criteria->compare('nama', $this->nama, true);
        $criteria->compare('desc_', $this->desc_, true);
        $criteria->compare('account_code', $this->account_code);
        $criteria->compare('inactive', $this->inactive);
        return new CActiveDataProvider(get_class($this), array(
            'criteria' => $criteria,
        ));
    }
}
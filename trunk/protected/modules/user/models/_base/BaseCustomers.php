<?php

/**
 * This is the model base class for the table "customers".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Customers".
 *
 * Columns in table "customers" available as properties of the model,
 * followed by relations of table "customers" available as properties of the model.
 *
 * @property integer $customer_id
 * @property string $name
 * @property string $phone
 * @property string $phone2
 * @property string $address
 * @property string $email
 * @property string $fax
 * @property integer $inactive
 *
 * @property Nota[] $notas
 */
abstract class BaseCustomers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'customers';
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('inactive', 'numerical', 'integerOnly'=>true),
			array('name, phone, phone2, address, email, fax', 'safe'),
			array('name, phone, phone2, address, email, fax, inactive', 'default', 'setOnEmpty' => true, 'value' => null),
			array('customer_id, name, phone, phone2, address, email, fax, inactive', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'notas' => array(self::HAS_MANY, 'Nota', 'customer_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'customer_id' => Yii::t('app', 'Customer'),
			'name' => Yii::t('app', 'Name'),
			'phone' => Yii::t('app', 'Phone'),
			'phone2' => Yii::t('app', 'Phone2'),
			'address' => Yii::t('app', 'Address'),
			'email' => Yii::t('app', 'Email'),
			'fax' => Yii::t('app', 'Fax'),
			'inactive' => Yii::t('app', 'Inactive'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('customer_id', $this->customer_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('phone2', $this->phone2, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('fax', $this->fax, true);
		$criteria->compare('inactive', $this->inactive);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}
<?php

/**
 * This is the model base class for the table "mt_chart_class".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MtChartClass".
 *
 * Columns in table "mt_chart_class" available as properties of the model,
 * followed by relations of table "mt_chart_class" available as properties of the model.
 *
 * @property string $cid
 * @property string $class_name
 * @property integer $ctype
 * @property integer $inactive
 *
 * @property MtChartTypes[] $pahChartTypes
 */
abstract class BaseMtChartClass extends GxActiveRecord
{
    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'mt_chart_class';
    }

    public static function representingColumn()
    {
        return 'class_name';
    }

    public function rules()
    {
        return array(
            array('cid', 'required'),
            array('ctype, inactive', 'numerical', 'integerOnly' => true),
            array('cid', 'length', 'max' => 3),
            array('class_name', 'length', 'max' => 60),
            array('class_name, ctype, inactive', 'default', 'setOnEmpty' => true, 'value' => null),
            array('cid, class_name, ctype, inactive', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
            'pahChartTypes' => array(self::HAS_MANY, 'MtChartTypes', 'class_id'),
        );
    }

    public function pivotModels()
    {
        return array();
    }

    public function attributeLabels()
    {
        return array(
            'cid' => Yii::t('app', 'Cid'),
            'class_name' => Yii::t('app', 'Class Name'),
            'ctype' => Yii::t('app', 'Ctype'),
            'inactive' => Yii::t('app', 'Inactive'),
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;
        $criteria->compare('cid', $this->cid, true);
        $criteria->compare('class_name', $this->class_name, true);
        $criteria->compare('ctype', $this->ctype);
        $criteria->compare('inactive', $this->inactive);
        return new CActiveDataProvider(get_class($this), array(
            'criteria' => $criteria,
        ));
    }
}
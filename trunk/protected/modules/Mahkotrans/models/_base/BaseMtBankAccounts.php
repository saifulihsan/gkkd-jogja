<?php

/**
 * This is the model base class for the table "mt_bank_accounts".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MtBankAccounts".
 *
 * Columns in table "mt_bank_accounts" available as properties of the model,
 * followed by relations of table "mt_bank_accounts" available as properties of the model.
 *
 * @property integer $id
 * @property string $account_code
 * @property integer $account_type
 * @property string $bank_account_name
 * @property string $bank_account_number
 * @property string $bank_name
 * @property string $bank_address
 * @property integer $inactive
 * @property string $bank_phone
 * @property string $atas_nama
 *
 * @property MtChartMaster $accountCode
 * @property MtBankTrans[] $mtBankTrans
 * @property MtKasKeluar[] $mtKasKeluars
 * @property MtKasMasuk[] $mtKasMasuks
 */
abstract class BaseMtBankAccounts extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'mt_bank_accounts';
	}

	public static function representingColumn() {
		return 'bank_account_name';
	}

	public function rules() {
		return array(
			array('account_type, inactive', 'numerical', 'integerOnly'=>true),
			array('account_code', 'length', 'max'=>15),
			array('bank_account_name, bank_name', 'length', 'max'=>60),
			array('bank_account_number', 'length', 'max'=>100),
			array('bank_phone, atas_nama', 'length', 'max'=>50),
			array('bank_address', 'safe'),
			array('account_code, account_type, bank_account_name, bank_account_number, bank_name, bank_address, inactive, bank_phone, atas_nama', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, account_code, account_type, bank_account_name, bank_account_number, bank_name, bank_address, inactive, bank_phone, atas_nama', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'accountCode' => array(self::BELONGS_TO, 'MtChartMaster', 'account_code'),
			'mtBankTrans' => array(self::HAS_MANY, 'MtBankTrans', 'bank_act'),
			'mtKasKeluars' => array(self::HAS_MANY, 'MtKasKeluar', 'mt_bank_accounts_id'),
			'mtKasMasuks' => array(self::HAS_MANY, 'MtKasMasuk', 'mt_bank_accounts_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'account_code' => Yii::t('app', 'Account Code'),
			'account_type' => Yii::t('app', 'Account Type'),
			'bank_account_name' => Yii::t('app', 'Bank Account Name'),
			'bank_account_number' => Yii::t('app', 'Bank Account Number'),
			'bank_name' => Yii::t('app', 'Bank Name'),
			'bank_address' => Yii::t('app', 'Bank Address'),
			'inactive' => Yii::t('app', 'Inactive'),
			'bank_phone' => Yii::t('app', 'Bank Phone'),
			'atas_nama' => Yii::t('app', 'Atas Nama'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('account_code', $this->account_code);
		$criteria->compare('account_type', $this->account_type);
		$criteria->compare('bank_account_name', $this->bank_account_name, true);
		$criteria->compare('bank_account_number', $this->bank_account_number, true);
		$criteria->compare('bank_name', $this->bank_name, true);
		$criteria->compare('bank_address', $this->bank_address, true);
		$criteria->compare('inactive', $this->inactive);
		$criteria->compare('bank_phone', $this->bank_phone, true);
		$criteria->compare('atas_nama', $this->atas_nama, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}